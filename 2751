#include <iostream>

using namespace std;

#define SIZE 5000000

int arr[SIZE];
int rrr[SIZE];



void merge(int start, int end)
{
    int mid = (start + end) / 2;
    int i = start, j = mid + 1, k = start;
    while (i <= mid && j <= end) {
        if (arr[i] <= arr[j])
            rrr[k++] = arr[i++];
        else
            rrr[k++] = arr[j++];
    }

    while (i <= mid)
        rrr[k++] = arr[i++];
    while (j <= end)
        rrr[k++] = arr[j++];

    for (int i = start; i <= end; i++) {
        arr[i] = rrr[i];
    }
}

void merge_sort(int start, int end)
{
    if (start < end) {
        int mid = (start + end) / 2;
        merge_sort(start, mid);
        merge_sort(mid + 1, end);
        merge(start, end);
    }
}

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n, k;

    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    merge_sort(0, n - 1);

    for (int i = 0; i < n; i++) {
        cout << arr[i] << "\n";
    }

    return 0;
}
