#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;


int map[3][3];
bool row[3];
bool cal[3];
int main() {
	

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int ans = 0;
	for (int i = 0;i < 3;i++) {
		for (int j = 0;j < 3;j++) {
			cin >> map[i][j];
		}
	}
	for (int i = 0;i < 3;i++) {
		if (map[i][0] != 0 && map[i][1] != 0 && map[i][2] != 0) {
			row[i] = true;
		}
		else {
			row[i] = false;
		}
		if (map[0][i] != 0 && map[1][i] != 0 && map[2][i] != 0) {
			cal[i] = true;
		}
		else {
			cal[i] = false;
		}
	}
	bool one = false;
	for (int i = 0;i < 3;i++) {
		if (cal[i] || row[i]) {
			one = true;
		}
	}

	if (!one) {

		if (map[0][0] + map[1][1] + map[2][2] == 0)
		{
			map[0][0] = ((map[1][0] + map[1][2] + map[2][0] + map[2][1]) - (map[0][1] + map[0][2]))/2;
			row[0] = true;
			cal[0] = true;
			ans = map[0][0] + map[0][1] + map[0][2];
		}
		else if (map[2][0] + map[1][1] + map[0][2] == 0)
		{
			map[0][2] = ((map[1][0] + map[1][2] + map[2][1] + map[2][2]) - (map[0][0] + map[0][1])) / 2;
			row[0] = true;
			cal[2] = true;
			ans = map[0][0] + map[0][1] + map[0][2];
		}
		else{
			ans = max(map[0][0] + map[1][1] + map[2][2], map[2][0] + map[1][1] + map[0][2]);
		}
	}
	else {

		for (int i = 0;i < 3;i++) {
			if (row[i]) { ans = map[i][0] + map[i][1] + map[i][2]; break; }
			if (cal[i]) { ans = map[0][i] + map[1][i] + map[2][i]; break; }
		}

		for (int i = 0;i < 3;i++) {
			for (int j = 0;j < 3;j++) {
				if (map[i][j] == 0) {
					int cnt = 0;
					for (int k = 0;k < 3;k++) {
						if (map[i][k] == 0) {
							cnt++;
						}
					}
					if (cnt == 1) {
						map[i][j] = ans - (map[i][0] + map[i][1] + map[i][2]);
					}
					if (map[i][j] == 0) {
						cnt = 0;
						for (int k = 0;k < 3;k++) {
							if (map[k][j] == 0) {
								cnt++;
							}
						}
						if (cnt == 1) {
							map[i][j] = ans - (map[0][j] + map[1][j] + map[2][j]);
						}
					}
				}
			}
		}
	}

	for (
		int i = 0;i < 3;i++) {
		for (int j = 0;j < 3;j++) {
			if (map[i][j] == 0) {
				int cnt = 0;
				for (int k = 0;k < 3;k++) {
					if (map[i][k] == 0) {
						cnt++;
					}
				}
				if (cnt == 1) {
					map[i][j] = ans - (map[i][0] + map[i][1] + map[i][2]);
				}
				if (map[i][j] == 0) {
					cnt = 0;
					for (int k = 0;k < 3;k++) {
						if (map[k][j] == 0) {
							cnt++;
						}
					}
					if (cnt == 1) {
						map[i][j] = ans - (map[0][j] + map[1][j] + map[2][j]);
					}
				}
			}
		}
	}

	for (int i = 0;i < 3;i++) {
		for (int j = 0;j < 3;j++) {
			cout << map[i][j] << " ";
		}
		cout << "\n";
	}


}
