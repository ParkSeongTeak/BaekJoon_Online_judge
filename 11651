#include<iostream>
#include<vector>

using namespace std;
int X[100000];
int Y[100000];
int Xtmp[100000];
int Ytmp[100000];



void marge(int left, int mid, int right) {
	int i = left, j = mid + 1, k = left;
	while (i <= mid && j <= right) {
		if (Y[i] < Y[j]) {
			Xtmp[k] = X[i];
			Ytmp[k] = Y[i];
			k += 1;
			i += 1;
		}
		else if(Y[i] > Y[j]){
			Xtmp[k] = X[j];
			Ytmp[k] = Y[j];
			k += 1;
			j += 1;
		}
		else {
			if (X[i] < X[j]) {
				Xtmp[k] = X[i];
				Ytmp[k] = Y[i];
				k += 1;
				i += 1;
			}
			else if (X[i] > X[j]) {
				Xtmp[k] = X[j];
				Ytmp[k] = Y[j];
				k += 1;
				j += 1;
			}
		}
	}

	while (i <= mid) {
		Xtmp[k] = X[i];
		Ytmp[k] = Y[i];
		k += 1;
		i += 1;
	}
	while (j <= right) {
		Xtmp[k] = X[j];
		Ytmp[k] = Y[j];
		k += 1;
		j += 1;
	}

	for (int i = left; i <= right; i++) {
		X[i] = Xtmp[i];
		Y[i] = Ytmp[i];
	}


}

void marge_sort(int left, int right) {
	
	if (left < right) {
		int mid = (left + right) / 2;
		marge_sort(left, mid);
		marge_sort(mid + 1, right);
		marge(left, mid, right);
	}
}


int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N,tmpx,tmpy;
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> tmpx>>tmpy;
		X[i] = tmpx;
		Y[i] = tmpy;
	}
	marge_sort(0, N - 1);
	
	for (int i = 0; i < N; i++) {
		cout << X[i] << " " << Y[i] << "\n";
	}
}
