#include<iostream>
#include<algorithm>
#include<queue>
#include<stdlib.h>
using namespace std;

#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;

double triangle(int x1, int y1, int x2, int y2, int x3, int y3) {	//Heron's Formula
	double a, b, c, s;
	
	a = sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2));
	b = sqrt(pow(x2 - x3, 2) + pow(y2 - y3, 2));
	c = sqrt(pow(x3 - x1, 2) + pow(y3 - y1, 2));

	s = (a + b + c) / 2;
	return sqrt(s*(s - a)*(s - b)*(s - c));

}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int N;
	int arr[10000][2];
	double ans = 0;
	cin >> N;

	for (int i = 0; i < N; i++) {
		cin >> arr[i][0] >> arr[i][1];
	}
	for (int i = 2; i < N; i++) {
		ans += triangle(arr[0][0], arr[0][1], arr[i - 1][0], arr[i - 1][1], arr[i][0], arr[i][1]);
	}
	//ans += 0.05;
	cout << fixed;
	cout.precision(1);
	cout << ans;

}
