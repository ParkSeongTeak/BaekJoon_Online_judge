#include<iostream>
#include<vector>
#include<queue>
using namespace std;

int map[20000+1][20000+1];
int V, E, K;	//V 정점 갯수/ E 간선 갯수/ K 시작 정점 번호

void bfs() {
	int v, e, k;
	v = V;
	e = E;
	k = K;

	queue<int> Q;
	Q.push(k);
	
	while (!Q.empty()) {
		
		int tmp = Q.front();	//	그래프의 정점
		Q.pop();

		for (int i = 0; i <= V; i++) {
			if (map[tmp][i] != 0) {

			}
		}

	}

}


int main() {	// V: 정점의 갯수 // E 간선의 갯수	V[1,20,000] E[1,300,000]
	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	
	cin >> V >> E >> K;

	//u 에서 v로 가는 가중치 w;
	for (int i = 0; i < E; i++) {
		int u, v, w;
		cin >> u >> v >> w;
		map[u][v] = w;
	}
	bfs();

}
