#include<iostream>
#include<vector>
#include<queue>
#define INF 987654321
using namespace std;

struct Node {
	int w, idx;
	bool operator < (const Node &other) const{
		return w > other.w;
	}
};


vector<Node>graph[20001];

int main() {

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int V, E, K;
	cin >> V >> E >> K;

	while (E--) {
		int u, v, w;
		cin >> u >> v >> w;
		graph[u].push_back({ w,v });
	}

	vector<int> length(V + 1, INF);
	length[K] = 0;
	priority_queue<Node> pq;
	pq.push({ 0,K });
	while (!pq.empty()) {
		Node tmp = pq.top();
		pq.pop();
		if (tmp.w > length[tmp.idx])
			continue;

		for (const auto &next : graph[tmp.idx]) {
			if (tmp.w + next.w < length[next.idx]) {
				length[next.idx] = tmp.w + next.w;
				pq.push({ tmp.w + next.w,next.idx });
			}
		}
	}

	for (int i = 1; i < length.size(); i++) {
		if (length[i] == INF)
			cout << "INF" << "\n";
		else
			cout << length[i] << "\n";
	}


}
