#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

const int MAX = 100001;

int idx[MAX];
int postO[MAX], inO[MAX];

void preO(int inBegin,int inEnd, int postBegin, int postEnd) {

	if (inBegin > inEnd || postBegin > postEnd)
		return;

	int root = postO[postEnd];
	cout << root << " ";
	//왼쪽
	
	preO(inBegin, idx[root] - 1, postBegin, postBegin + (idx[root] - inBegin) - 1);

	//오른쪽

	preO(idx[root] + 1, inEnd, postBegin + (idx[root] - inBegin), postEnd - 1);


}
int main() {
	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N;
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> inO[i];
	}
	for (int i = 0; i < N; i++) {
		cin >> postO[i];
	}
	for (int i = 0; i < N; i++) {
		idx[inO[i]] = i;
	}
	

	preO(0, N - 1, 0, N - 1);
}
