#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int map[9][9];
void solve(int y, int x) {
	bool used_num[10] = { false };
	vector<int> can_use;

	for (int i = 0; i < 9; i++) {
		if (map[i][x]) used_num[map[i][x]] = true;
		if (map[y][i]) used_num[map[y][i]] = true;

	}

	int sqr_y = (y / 3) * 3;
	int sqr_x = (x / 3) * 3;

	for (int tmpy = sqr_y; tmpy < sqr_y + 3; tmpy++) {
		for (int tmpx = sqr_x; tmpx < sqr_x + 3; tmpx++) {
			used_num[map[tmpy][tmpx]] = true;
		}
	}

	for (int i = 1; i <= 9; i++) {
		if (!used_num[i]) can_use.push_back(i);
		
	}
	
	if (!can_use.size()) return;

	int next_y = y;
	int next_x = x;

	while (next_y<9) {
		next_x += 1;
		if (next_x == 9) {
			next_y += 1;
			next_x = 0;
			if (next_y == 9) {
				map[y][x] = can_use[0];

				for (int y = 0; y < 9; y++) {
					for (int x = 0; x < 9; x++)
						cout << map[y][x] << " ";
					if(y!=8)cout << "\n";					//단! 9줄만 출력해야함.......
				}

				exit(0);
			}
		}
		if (map[next_y][next_x] == 0)
			break;
		
	}

	for (int i = 0; i < can_use.size(); i++) {
		map[y][x] = can_use[i];
		solve(next_y, next_x);
		map[y][x] = 0;
	}


}


int main() {
	
	for (int y = 0; y < 9; y++) {
		for (int x = 0; x < 9; x++)
			cin >> map[y][x];
	}
	for (int y = 0; y < 9; y++) {
		for (int x = 0; x < 9; x++)
			if (map[y][x] == 0)
				solve(y, x);
	}
	return 0;
	

}
