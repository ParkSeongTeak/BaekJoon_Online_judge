#include<iostream>
#include<algorithm>
#include<string>
#include<stack>
#define MAX 1001
using namespace std;

int DP[MAX][MAX];

int main() {

	string str[2];
	int size[2];
	stack<char> ans;
	cin >> str[0];
	cin >> str[1];
	


	size[0] = str[0].size();
	size[1] = str[1].size();


	for (int y = 1; y <= size[0]; y++) {
		for (int x = 1; x <= size[1]; x++) {
			if (str[0][y-1] == str[1][x-1]) {
				DP[y][x] = DP[y - 1][x - 1] + 1;
			}
			else {
				if (DP[y - 1][x] > DP[y][x - 1]) {
					DP[y][x] = DP[y - 1][x];
				}
				else {
					DP[y][x] = DP[y][x - 1];
				}
			}
		}
	}

	while (DP[size[0]][size[1]] != 0) {
		if (DP[size[0]][size[1]] == DP[size[0]][size[1] - 1]) {
			size[1]--;
		}
		else if (DP[size[0]][size[1]] == DP[size[0]-1][size[1]]) {
			size[0]--;
		}
		else if(DP[size[0]][size[1]]-1 == DP[size[0]-1][size[1]-1]){
			ans.push(str[0][size[0]-1]);
			
			size[0]--;
			size[1]--;
		}

	}

	cout << DP[str[0].size() ][str[1].size()]<<"\n";
	
	while (!ans.empty()) {
		cout << ans.top();
		ans.pop();
	}
}
