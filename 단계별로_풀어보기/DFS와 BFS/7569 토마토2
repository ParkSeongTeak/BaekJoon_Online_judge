#define MAX 100+1
#include<iostream>
#include<algorithm>
#include<queue>
#include<vector>
using namespace std;

class tomato {
public :
	int z, y, x;
	tomato(int Z = 0, int Y = 0, int X = 0) : z(Z), y(Y), x(X) {};

	void operator = (tomato &other) {
		this->z = other.z;
		this->y = other.y;
		this->x = other.x;
	}

};

int map[MAX][MAX][MAX];
//bool BFS_check[MAX][MAX];
int N, M, H;
queue<tomato>Q;

void BFS() {
	int dz[6] = {1,-1,0,0,0,0};
	int dy[6] = {0,0,1,-1,0,0};
	int dx[6] = {0,0,0,0,1,-1};

	int n = N;
	int m = M;
	int h = H;

	while (!Q.empty()) {
		tomato tmp = Q.front();
		Q.pop();
		
		for (int i = 0; i < 6; i++) {
			if (tmp.z + dz[i] >= 0 && tmp.z + dz[i] < h && tmp.y + dy[i] >= 0 && tmp.y + dy[i] < n && tmp.x + dx[i] >= 0 && tmp.x + dx[i] < m ) {

				if (map[tmp.z + dz[i]][tmp.y + dy[i]][tmp.x + dx[i]] == 0) {
					map[tmp.z + dz[i]][tmp.y + dy[i]][tmp.x + dx[i]] = map[tmp.z][tmp.y][tmp.x] + 1;
					tomato T(tmp.z + dz[i], tmp.y + dy[i], tmp.x + dx[i]);
					Q.push(T);

				}
			}
		}


	}

}

int main() {

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);


	int ans = 0;
	cin >> M >> N >> H;
	for (int z = 0; z < H; z++) {
		for (int y = 0; y < N; y++) {
			for (int x = 0; x < M; x++) {
				cin >> map[z][y][x];
				if (map[z][y][x] == 1) {
					tomato T(z, y, x);
					Q.push(T);
				}
			}
		}
	}
	BFS();

	
	for (int z = 0; z < H; z++) {
		for (int y = 0; y < N; y++) {
			for (int x = 0; x < M; x++) {
				ans = max(ans, map[z][y][x]);
				if (map[z][y][x] == 0) {
					cout << -1;
					return 0;
				}
			}
		}
	}
	cout << ans-1;
	
}
