#include<iostream>
#include<algorithm>
using namespace std;

int map[501][501];
int idx=0;
int sum[501][501];
int N;

int one = 0, two = 0;

void Ssum(int idx) {
	if (idx == N) 
		return;
	else {
		sum[idx][0] = sum[idx - 1][0] + map[idx][0];
		for (int pick = 1; pick < idx; pick++) {	// 집 선택
			sum[idx][pick] = map[idx][pick] + max(sum[idx - 1][pick], sum[idx - 1][pick - 1]);
		}
		sum[idx][idx] = sum[idx - 1][idx - 1] + map[idx][idx];
	}
	Ssum(idx + 1);
}

int main() {
	cin >> N;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j <= i; j++) {
			cin >> map[i][j];
		}
	}
	sum[0][0] = map[0][0];
	Ssum(1);
	int max = 0;
	for (int i = 0; i < N; i++) {
		if (max < sum[N - 1][i])
			max = sum[N - 1][i];
	}
	cout << max;
}
