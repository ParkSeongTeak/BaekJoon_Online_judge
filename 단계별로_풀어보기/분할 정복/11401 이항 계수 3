#define DIV 1000000007
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

long long K, NMinsK;

int Parr[50];
int DP[50];
int idx = 0;
long long Fact(int N, long long k, long long NmK) {
	if (N == 1)return 1;

	if (N == K) {
		K = (N * Fact(N - 1, k, NmK) )% DIV;
		return K;
	}
	if (N == NmK) {
		NMinsK =( N * Fact(N - 1, k, NmK) )% DIV;
		return NMinsK;
	}

	return (N * Fact(N - 1, k, NmK) )% DIV;
}


long long power(int N, int p) {
	if (p == 0)return 1;
	
	for (int i = 0; i < 50; i++) {
		if (Parr[i] == p) {
			return DP[i];
		}
		else if (Parr[i] == 0)
			break;
	}

	if (p % 2 == 1)
		return (power(N, p - 1)*N) % DIV;
	else {
		DP[idx] = ((long long)power(N, p / 2)*power(N, p / 2)) % DIV;
		Parr[idx] = p;
		return DP[idx];
	}


}

int main() {

	int n;
	cin >> n >> K;
	int ans;

	ans = (Fact(n, K, n - K) * power((int)((K*NMinsK) % DIV), DIV - 2)) % DIV;
	if (ans != 0)
		cout << ans;
	else
		cout << 1;
}
