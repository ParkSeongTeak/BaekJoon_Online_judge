#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;



void marge(int map[][128], int N,int Yidx,int Xidx,int *W, int *B) {
	bool same[2][2] = { {true, true}, {true, true} };
	if (N == 1) {
		if (map[Yidx][Xidx] == 1) {
			*B += 1;
			
		}

		else {
			*W += 1;
			
		}
		
		return;
	}
	else {
		for (int dy = 0; dy < 2; dy++) {			//제 N사분면
			for (int dx = 0; dx < 2; dx++) {
				int start = map[Yidx + dy * N / 2][Xidx + dx * N / 2];	//제 N사분면 첫 값
				
				for (int Y = Yidx + dy * (N / 2); Y < Yidx + (dy+1) * (N / 2); Y++) {
					for (int X = Xidx + dx * (N / 2); X < Xidx + (dx+1) * (N / 2); X++) {
						if (start != map[Y][X]) {
							same[dy][dx] = false;
							break;
							break;
						}
					}
				}
				if (!same[dy][dx])
					marge(map, N / 2, Yidx + dy * N / 2, Xidx + dx * N / 2, W, B);//int map[][128], int N,int Yidx,int Xidx,int *W, int *B
				else {
					if (start == 1) {
						*B += 1;
						
					}
					else {
						*W += 1;
						

					}


				}
			}
		}


	}


}

int main() {
	int N;
	cin >> N;
	int map[128][128];
	int W = 0, B = 0;
	bool one = true;
	
	for (int y = 0; y < N; y++) {
		for (int x = 0; x < N; x++) {
			cin >> map[y][x];
		}
	}
	int start = map[0][0];
	for (int y = 0; y < N; y++) {
		for (int x = 0; x < N; x++) {
			if (start != map[y][x]) {
				one = false;
				break;
				break;
			}
		}
	}
	if (one) {
		if (start == 1)
			B += 1;
		else
			W += 1;
	}
	else
		marge(map, N, 0, 0, &W, &B);
	cout << W <<"\n"<< B;
}
