#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;


void marge(int map[][64], int N,int Yidx,int Xidx) {
	bool same[2][2] = { {true, true}, {true, true} };
	if (N == 1) {
		if (map[Yidx][Xidx] == 1) {
			cout << 1;
			
		}

		else {
			cout<<0;
			

		}
		
		return;
	}
	else {
		for (int dy = 0; dy < 2; dy++) {			//제 N사분면
			for (int dx = 0; dx < 2; dx++) {
				int start = map[Yidx + dy * N / 2][Xidx + dx * N / 2];	//제 N사분면 첫 값
				
				for (int Y = Yidx + dy * (N / 2); Y < Yidx + (dy+1) * (N / 2); Y++) {
					for (int X = Xidx + dx * (N / 2); X < Xidx + (dx+1) * (N / 2); X++) {
						if (start != map[Y][X]) {
							same[dy][dx] = false;
							break;
							break;
						}
					}
				}
				if (!same[dy][dx]) {
					cout << "(";
					marge(map, N / 2, Yidx + dy * N / 2, Xidx + dx * N / 2);
					cout << ")";
				}
				
				else {
					if (start == 1) {
						cout << 1;
					}
					else {
						cout << 0;

					}


				}
			}
		}


	}


}

int main() {

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N;
	cin >> N;
	int map[64][64];
	string num;
	int W = 0, B = 0;
	bool one = true;
	
	for (int y = 0; y < N; y++) {
		cin >> num;
		for (int x = 0; x < N; x++) {
			map[y][x] = num[x] - '0';
		}
	}

	int start = map[0][0];
	
	for (int y = 0; y < N; y++) {
		for (int x = 0; x < N; x++) {
			if (start != map[y][x]) {
				one = false;
				break;
				break;
			}
		}
	}
	if (one) {
		if (start == 1)
			cout << 1;
		else
			cout<< 0;
	}
	else {
		cout << "(";
		marge(map, N, 0, 0);
		cout << ")";
	}
}
